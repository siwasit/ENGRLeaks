# # Stage 1: Frontend build
# FROM node:23-alpine AS frontend-builder
# WORKDIR /frontend
# COPY frontend/package*.json ./
# RUN npm install
# COPY frontend .
# RUN npm run build && npm run export

# # Stage 2: Backend build
# FROM python:3.9-slim AS backend-builder
# WORKDIR /backend
# COPY backend/requirements.txt .
# RUN pip install --user -r requirements.txt
# COPY backend .

# # Stage 3: Final production image
# FROM nginx:alpine

# # Copy nginx configuration
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# # Copy frontend build
# COPY --from=frontend-builder /frontend/out /usr/share/nginx/html

# # Copy backend
# COPY --from=backend-builder /backend /backend
# COPY --from=backend-builder /root/.local /root/.local

# # Set environment variables
# ENV PATH="/root/.local/bin:${PATH}"
# ENV PYTHONUNBUFFERED=1
# ENV DJANGO_SETTINGS_MODULE=backend_app.settings

# # Collect static files and run migrations
# RUN cd /backend && \
#     python manage.py collectstatic --noinput

# # Start both services
# COPY start.sh /start.sh
# RUN chmod +x /start.sh
# CMD ["/start.sh"]